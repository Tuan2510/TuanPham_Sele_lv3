trigger: none

# Parameters for the CI job
parameters:
  - name: branch
    displayName: Git branch
    type: string
    default: main
  - name: browser
    displayName: Browser
    type: string
    default: chrome
    values:
      - chrome
      - edge
  - name: suite
    displayName: Test suite
    type: string
    default: 'VietJet Suite'
    values:
      - 'VietJet Suite'
      - 'Agoda Suite'
      - 'LeapFrog Suite'
      - 'Book Suite'
  - name: env
    displayName: Environment
    type: string
    default: stg
    values:
      - stg
      - dev
      - leapfrog
      - book
  - name: group
    displayName: Group
    type: string
    default: AGRegression
    values:
      - AGRegression
      - VJRegression
      - BookRegression
  - name: parallelMode
    displayName: Parallel mode
    type: string
    default: methods
    values:
      - methods
      - tests
  - name: language
    displayName: Language
    type: string
    default: en-us
    values:
      - en-us
      - vi-vn
  - name: gridUrl
    displayName: Grid URL (leave empty for local run)
    type: string
    default: ''
  - name: maxRetry
    displayName: Max retry
    type: number
    default: 0
  - name: retryStrategy
    displayName: Retry strategy
    type: string
    default: immediately
    values:
      - immediately
      - exponential
  - name: emailRecipient
    displayName: Email recipient
    type: string
    default: ''

stages:
  - stage: Tests
    displayName: Run UI tests
    jobs:
      - job: RunTests
        displayName: Execute tests
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self
            clean: true
            fetchDepth: 0
            ref: ${{ parameters.branch }}

          # Ensure JDK 21 is used
          - script: |
              echo "##vso[task.setvariable variable=JAVA_HOME]$JAVA_HOME_21_X64"
              export PATH="$JAVA_HOME/bin:$PATH"
              java -version
            displayName: 'Set up JDK'

          # Run tests with parameters
          - script: |
              mvn -B test \
                -Dbrowser=${{ parameters.browser }} \
                -Dsuite="${{ parameters.suite }}" \
                -Denv=${{ parameters.env }} \
                -Dgroup=${{ parameters.group }} \
                -Dparallel=${{ parameters.parallelMode }} \
                -Dlanguage=${{ parameters.language }} \
                -Dgrid.url="${{ parameters.gridUrl }}" \
                -Dmax.retry=${{ parameters.maxRetry }} \
                -Dretry.strategy=${{ parameters.retryStrategy }} \
                -Demail.recipient="${{ parameters.emailRecipient }}"
            displayName: 'Run tests'

          # Publish test results
          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'target/surefire-reports/*.xml'
              failTaskOnFailedTests: false
            displayName: 'Publish TestNG results'

          # Archive Allure raw results
          - task: PublishBuildArtifacts@1
            condition: always()
            inputs:
              PathtoPublish: 'target/allure-results'
              ArtifactName: 'allure-results'
              publishLocation: 'Container'
            displayName: 'Archive Allure results'

          # Placeholder for email notification
          - script: |
              if [ -n "${{ parameters.emailRecipient }}" ]; then
                echo "Would send report to ${{ parameters.emailRecipient }}"
              else
                echo "No email recipient provided - skipping notification."
              fi
            displayName: 'Notify via email'
